#!/usr/bin/env bash

# Init
echo "Loading resources..."
mt_setup_dir="$(readlink -f "${BASH_SOURCE[0]}" | xargs realpath | xargs dirname)"
. "${mt_setup_dir}/common/tasks"

# Prepare twiner
echo "Preparing twiner..."
if [ -d ~/.twiner ]; then
    git -C ~/.twiner pull
else
    git clone https://github.com/myTerminal/twiner.git ~/.twiner
fi
. ~/.twiner/load "${1}"

# Load bash configs to ensure variables have values
. ~/.config/bash/config

# Perform platform-specific setup
case "$(uname)" in
    Linux )
        tw_confirm_and_source "Start setup for Linux?" \
                              "${mt_setup_dir}/linux/run" \
                              "Skipped setup for Linux!"
        ;;

    Darwin)
        tw_confirm_and_source "Start setup for macOS?" \
                              "${mt_setup_dir}/mac/run" \
                              "Skipped setup for macOS!"
        ;;

    *)
        tw_abort_because "Unknown platform found."
        ;;
esac

tw_log "Starting with platform independent steps..."

# Perform platform-independent setup
tw_confirm "Generate SSH key?" \
           mt_task_generate_ssh_key \
           "Generation of SSH key skipped."
tw_confirm "Install global NPM packages?" \
           mt_task_install_npm_packages \
           "Installing NPM packages skipped."
tw_confirm "Create custom Lisp parser?" \
           mt_task_create_lisp_parser \
           "Creation of custom Lisp parser skipped."
tw_confirm "Create required directories?" \
           mt_task_create_required_directories \
           "Creating of required directories skipped."
tw_confirm "Clone GitHub source projects?" \
           mt_task_clone_github_source_projects \
           "Cloning GitHub source projects skipped."
tw_confirm "Create fallback link to ~/.config/emacs?" \
           mt_task_create_fallback_link_to_emacs_xdg \
           "Creation of fallback link skipped."
tw_confirm "Link myTerminal/.emacs.d to dotfiles?" \
           mt_task_link_default_emacs_configs \
           "Linking default Emacs configs skipped."
tw_confirm "Convert dotfiles at '~' from HTTPS to SSH?" \
           mt_task_convert_dotfiles_to_ssh \
           "Converting dotfiles at '~' from HTTPS to SSH skipped."
tw_confirm "Create convenience soft-links?" \
           mt_task_link_create_convenience_softlinks \
           "Creation of convenience soft-links skipped."
tw_confirm "Tag machine as configured?" \
           mt_task_tag_machine_as_configured \
           "Machine not tagged as configured."

# Prompt for a reboot
tw_confirm "Setup is complete, reboot now?" \
           tw_reboot_now \
           "Reboot skipped."
